{"version":3,"sources":["Button.js","App.js","reportWebVitals.js","index.js"],"names":["Button","name","email","phone_number","address","gender","age","trigger","href","modal","nested","close","className","onClick","console","log","initialState","maritial_status","App","onChange","event","value","target","setState","onSubmit","preventDefault","alert","state","this","class","type","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f991a615.chunk.js","sourcesContent":["import React from 'react';\r\nimport Popup from 'reactjs-popup';\r\nimport './Button.css';\r\n\r\nconst Button = ({ name, email, phone_number, address, gender, age }) => {\r\n  return (\r\n    <Popup\r\n      trigger={ <a href=\"#\">\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n                Submit\r\n              </a>}\r\n      modal\r\n      nested\r\n    >\r\n      {close => (\r\n        <div className=\"modal\">\r\n          <button className=\"close\" onClick={close}>\r\n            &times;\r\n          </button>\r\n          <div className=\"header\"> Entered Data </div>\r\n          <div className=\"content\">\r\n            Name: {name}\r\n            <br />\r\n            Email: {email}\r\n            <br />\r\n            Phone Number: {phone_number}\r\n            <br />\r\n            Address: {address}\r\n            <br />\r\n            Gender: {gender}\r\n            <br />\r\n            Age: {age}\r\n          </div>\r\n          <div className=\"actions\">\r\n            <button\r\n              className=\"button\"\r\n              onClick={() => {\r\n                console.log('modal closed');\r\n                close();\r\n              }}\r\n            >\r\n              Okay\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Popup>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Button from './Button';\n\nconst initialState = {\n  name: '',\n  email: '',\n  phone_number: '',\n  address: '',\n  gender: '',\n  age: '',\n  maritial_status: ''\n}\n\nclass App extends Component{\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  onChange = (event) => {\n    const value = event.target.value;\n    this.setState({\n      [event.target.name]: value\n    })\n  }\n\n  onSubmit = (event) => {\n    //Typically, we would run a fetch POST here to hit the API endpoint and accept the values to the backend.\n    //However, since we do not have a backend, we display submitted values in an alert.\n    event.preventDefault();\n    alert('Name: ' + this.state.name\n          + '\\nEmail: ' + this.state.email\n          + '\\nPhone Number: ' + this.state.phone_number\n          + '\\nAddress: ' + this.state.address\n          + '\\nGender: ' + this.state.gender\n          + '\\nAge: ' + this.state.age\n        );\n  }\n\n  render() {\n    const { name, email, phone_number, address, gender, age } = this.state;\n    return (\n      <div className=\"app-box\">\n        <h2>Form Handling Practice</h2>\n        <form>\n          <div class='input-box'>\n            <input name='name' value={this.state.name} type='text' onChange={this.onChange} />\n            <label>Name</label>\n          </div>\n          <div class='input-box'>\n            <input name='email' value={this.state.email} type='text' onChange={this.onChange} />\n            <label>Email</label>\n          </div>\n          <div class='input-box'>\n            <input name='phone_number' value={this.state.phone_number} type='number' onChange={this.onChange} />\n            <label>Phone Number</label>\n          </div>\n          <div class='input-box'>\n            <input name='address' value={this.state.address} type='text' onChange={this.onChange} />\n            <label>Address</label>\n          </div>\n          <div class='input-box'>\n            <select name='gender' value={this.state.gender} onChange={this.onChange} >\n              <option value='Male'>Male</option>\n              <option value='Female'>Female</option>\n              <option value='Other'>Other</option>\n            </select>\n            <label>Gender</label>\n          </div>\n          <div class='input-box'>\n            <input name='age' value={this.state.age} type='number' onChange={this.onChange} />\n            <label>Age</label>\n          </div>\n          <Button name={name} email={email} phone_number={phone_number} address={address} gender={gender} age={age}/>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}